#!/usr/bin/env luajit
local fqclient = require 'fqclient'
local ffi = require 'ffi';

local USAGE = [[
Arguments:
  --host      (default localhost)    fq host to connect
  --port      (default 8765)         port to connect
  --user      (default user)
  --pass      (default pass)
  --exchange  (string)
  --route     (default "")
  -v verbosity
]]

local function die(msg)
  print(msg)
  print(USAGE)
  os.exit(1)
end

local host = "localhost"
local port = 8765
local user = "user"
local pass = "pass"
local exchange
local route = ""
local verbose = false

local function shift() return table.remove(arg, 1) end
while #arg > 0 do
  local key = shift()
  if     key == "--host" then
    host = shift()
  elseif key == "--port" then
    port = shift()
  elseif key == "--user" then
    user = shift()
  elseif key == "--pass" then
    pass = shift()
  elseif key == "--exchange" then
    exchange = shift()
  elseif key == "--route" then
    route = shift()
  elseif key == "-v" or key == "--verbose" then
    verbose = true
  elseif key == "-h" or key == "--help" then
    print(USAGE)
    os.exit(0)
  else
    die("Unknown argument " .. key)
  end
end

if not exchange then
  die("Exchange not provided")
end
if not route then
  die("Route not provided")
end

local log
if verbose then
  log = function(...) return io.stderr:write(string.format(...) .. "\n") end
else
  log = function() end
end

local function exit()
end

log("Connecting to %s %d %s %s\n", host, port, user, pass)
local fq_client = fqclient.new(host, port, user, pass)
fq_client:connect()
while true do
  local msg = io.read()
  if not msg then
    fqclient:close()
    os.exit(0)
  end
  fq_client:send(msg, exchange, route)
  log('sent\t{ "exchange":"%s", route:"%s", "message":"%s" }', exchange, route, msg)
end
